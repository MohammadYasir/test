{"version":3,"sources":["D:/Self_learning/IGT/ui/todolist/src/$_lazy_route_resource lazy","D:/Self_learning/IGT/ui/todolist/src/app/app.component.css","D:/Self_learning/IGT/ui/todolist/src/app/app.component.html","D:/Self_learning/IGT/ui/todolist/src/app/app.component.ts","D:/Self_learning/IGT/ui/todolist/src/app/app.module.ts","D:/Self_learning/IGT/ui/todolist/src/environments/environment.ts","D:/Self_learning/IGT/ui/todolist/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Self_learning/IGT/ui/todolist/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Self_learning/IGT/ui/todolist/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <mat-toolbar color=\\\"primary\\\">\\n    <span class=\\\"header-margin\\\">A simple TODO list app</span>\\n  </mat-toolbar>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-7\\\">\\n    <mat-card>\\n      <mat-card-title>\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Selected tasks\\\" [(value)]=\\\"selectedStatus\\\" (change)=\\\"statusValueChanged()\\\">\\n            <mat-option value=\\\"COMPLETED\\\">\\n              Completed\\n            </mat-option>\\n            <mat-option value=\\\"PENDING\\\">\\n              Pending\\n            </mat-option>\\n            <mat-option value=\\\"ALL\\\">\\n              All\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </mat-card-title>\\n      <mat-card-content>\\n        <mat-list>\\n          <mat-list-item *ngFor=\\\"let task of displayTasks\\\" >\\n            <h3 matLine> {{task.title}} -----<i>{{task.status}}</i></h3>\\n            <p matLine> {{task.description}}\\n              </p>\\n              <p>\\n            <button *ngIf=\\\"task.status==='PENDING'\\\" mat-raised-button mat-button (click)=\\\"markCompleted(task)\\\">MarkCompleted</button> </p>\\n            <p>\\n            <button mat-raised-button mat-button (click)=\\\"delete(task)\\\">Delete</button>\\n          </p>\\n          </mat-list-item>\\n          <mat-divider></mat-divider>\\n        </mat-list>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <div class=\\\"col-md-5\\\">\\n    <mat-card>\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"add(form.value)\\\">\\n      <mat-card-content>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Title\\\" formControlName=title>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\">\\n          </mat-form-field>\\n          <input type=\\\"hidden\\\" formControlName=\\\"status\\\" value=\\\"PENDING\\\">\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <button mat-button type=\\\"submit\\\" mat-raised-button>Add</button>\\n      </mat-card-actions>\\n      </form>\\n    </mat-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Self_learning/IGT/ui/todolist/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { MatToolbar, MatCard, MatCardContent, MatNavList, MatButton, MatFormField, MatSelect} from '@angular/material';\nimport {FormGroup, FormControl} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  displayTasks = [];\n  tasks = [];\n  selectedTask = {};\n  selectedStatus=\"ALL\";\n  form;\n  constructor(private http: HttpClient) {}\n  ngOnInit(){\n    this.http.get<Task[]>('/api/tasks').subscribe(data => {\n      console.log(data);\n      this.tasks = data;\n      this.displayTasks = data;\n    });\n    this.form = new FormGroup({\n      title : new FormControl(),\n      description : new FormControl(),\n      status : new FormControl('PENDING')\n    });\n  }\n\n  add(task){\n    this.http.post('/api/tasks', task).subscribe(data => {\n      this.tasks.push(data);\n      this.statusValueChanged();\n    });\n  }\n\n  delete(task){\n    this.http.delete('/api/tasks/'+task.id).subscribe(data => {\n      console.log(\"task deleted\")\n    });\n    this.http.get<Task[]>('/api/tasks').subscribe(data => {\n      this.tasks = data;\n      this.statusValueChanged();\n    });\n  }\n\n  statusValueChanged(){\n    console.log(\"done\")\n    if(this.selectedStatus==='COMPLETED') {\n      this.displayTasks = [];\n      this.tasks.map((task)=>{\n        if(task.status==='COMPLETED'){\n          this.displayTasks.push(task);\n        }\n      });\n    } else if(this.selectedStatus==='PENDING') {\n      this.displayTasks = [];\n      this.tasks.map((task)=>{\n        if(task.status==='PENDING'){\n          this.displayTasks.push(task);\n        }\n      });\n    } else {\n      this.displayTasks = [];\n      this.tasks.map((task)=>{\n        this.displayTasks.push(task);\n      })\n    }\n  }\n\n  markCompleted(task){\n    task.status = \"COMPLETED\";\n    this.http.put('/api/tasks/'+task.id, task).subscribe(data => {\n      console.log(\"task updated\")\n    });\n    this.http.get<Task[]>('/api/tasks').subscribe(data => {\n      this.tasks = data;\n      this.statusValueChanged();\n    });\n  }\n}\ninterface Task {\n  id: number,\n  title: string,\n  description: string,\n  status:string\n}\n\n/*const TASKS = [\n    {\n        \"id\": 2,\n        \"title\": \"Task2\",\n        \"description\": \"New Task2\",\n        \"status\": \"PENDING\"\n    },\n    {\n        \"id\": 33,\n        \"title\": \"Task3\",\n        \"description\": \"New Task 3\",\n        \"status\": \"PENDING\"\n    },\n    {\n        \"id\": 34,\n        \"title\": \"Task3\",\n        \"description\": \"New Task 3\",\n        \"status\": \"PENDING\"\n    }\n]*/\n\n\n\n// WEBPACK FOOTER //\n// D:/Self_learning/IGT/ui/todolist/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatToolbarModule, MatCardModule, MatListModule, MatButtonModule, MatFormFieldModule, MatInputModule,\n  MatSelectModule} from '@angular/material';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, MatToolbarModule, MatCardModule, MatListModule, MatButtonModule, MatFormFieldModule, MatInputModule,\n    BrowserAnimationsModule, ReactiveFormsModule, HttpClientModule, MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/Self_learning/IGT/ui/todolist/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Self_learning/IGT/ui/todolist/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/Self_learning/IGT/ui/todolist/src/main.ts"],"sourceRoot":"webpack:///"}